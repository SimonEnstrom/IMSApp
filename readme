// Setting up the project for the first time for android:
1. On your phone, go activate developer options.
2. In the developer options, activate USB-debugging.
3. Plug phone into PC and allow USB-debugging when prompted.
4. navigate to folder in terminal.
5. run "npm install".
6. run "npx react-native run-android".


// Workflow to join project and work with ios. 
# All lines starting with "~" are terminal/shell commands written in the /IMSApp directory if nothing else is specified.
Steps to reproduce including errors: 

1. Download xcode
2. Open xcode -> Preferences -> Components
3. Download an emulator

4. Open terminal

5. ~cd <path to project>
Ex: cd Documents/IMS/project

6. ~git clone <link>
Ex: git clone https://github.com/SimonEnstrom/IMSApp.git

7. ~cd IMSApp

8. ~code .

9. Open terminal in vsCode

10. ~git branch <namn>
Ex: git branch Jacob1.0

11. ~git checkout <branch name>
Ex: git checkout Jacob1.0

12. ~npm install
13. ~npx react-native run-ios
# If this works already, which it should if you have merged your project with either "mergebranch" or "Jacob1.0", you can skip step 14-18
"Error Failed to build iOS project. We ran "xcodebuild" command but it exited with error code 65.
 To debug build logs further, consider building your app with Xcode.app, by opening IMSApp.xcodeproj "

14. ~cd IMSApp
15. ~cd ios

16. ~pod install

17. ~cd ..

18. npx react-native run-ios
** Building takes a few minutes. 

// General git Workflow instructions 
~git status
# Use this command before and after working with git to make sure that things look alright. To add ALL untracked files use "git add ."

Untracked files:
  (use "git add <file>..." to include in what will be committed)

        ios/IMSApp.xcodeproj/project.xcworkspace/
        ios/IMSApp.xcworkspace/
        ios/Podfile.lock

no changes added to commit (use "git add" and/or "git commit -a")

~git add .

~git commit -a -m"<message>"

~git push <remote> <branch>
Ex: git push origin Jacob1.0
# Origin is default name of remote if you did "git clone". 

~git status

On branch Jacob1.0
nothing to commit, working tree clean

# Merge/Pull
~git status
# Commit if needed

~git branch
# Make sure you are in the branch you want to merge TO. Otherwise git checkout <branch to merge to>

~git pull <remote> <branch>
Ex: git pull origin mergebranch

TODO:
// Rezise the viewbox based on how big the mower driving area is? Alt increse X/Y for points.  
// Dont show collision dots if we are driving manually? * DONE
// Store manually driving positions. * Backendpart DONE
// Remove backend handler and playbot. 
// Write out what the red dot in map means. 
// If there is no collisions, a dot at 0,0 appears? 
